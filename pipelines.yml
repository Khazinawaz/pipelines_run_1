resources:
  - name: mvnBuild_infoo
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: mvn_sample_build
      buildNumber: 9
      
#   - name: mvnBuild_infoScaneds
#     type: BuildInfo
#     configuration:
#       sourceArtifactory: art
#       buildName: mvn_scan
#       buildNumber: 2
      
  - name: mvnBuild_infopromoted01
    type: BuildInfo
    configuration:
      sourceArtifactory: s_artifactory
      buildName: mvn_promote_build
      buildNumber: 3
      
#   - name: unsigned_mvn_release_bundles
#     type: ReleaseBundle
#     configuration:
#       sourceDistribution: dist
#       name: mvn_release_bundle_unsigned
#       version: v1.1.1
#       isSigned: false
  
#   - name: signed_mvn_release_bundles
#     type: ReleaseBundle
#     configuration:
#       sourceDistribution:_distribution
#       name: mvn_release_bundle_signed
#       version: v1.2.0
#       isSigned: true
  
#   - name: mvn_distribution_rules
#     type: DistributionRule
#     configuration:
#       sourceDistribution: dist
#       cityName: "*"
#       serviceName: "*"
#       siteName: "*"
#       countryCodes:
# #         - GB #edge node -> intend EU
#        # - CN #edge node
#        - IN #artifactory
#        # - US #artifactory
       
  - name: mvn_repo04
    type: GitRepo
    configuration:
      gitProvider: nawaz_gh
      path: Khazinawaz/project-examples
 
      
pipelines:          
  - name: mvn_test
    steps:     
      - name: mvnBuild_sample
        type: MvnBuild
        configuration:
#           nodePool: ubuntu16
          sourceLocation: ./artifactory-maven-plugin-example
          mvnCommand: clean install
          configFileLocation: .
          configFileName: mvn-art-config
          inputResources:
            - name: mvn_repo04
          integrations:
            - name: s_artifactory
#             - name:_slack
          runtime:            
            type: image
            image:
              auto:
                language: java
                versions: 
                  - 13
        execution:
          onStart:
           ######## if jave image is not there then install java using following commands
#             - apt-get update 
#             - apt install default-jdk
#             - pushd /tmp
#             - wget http://mirrors.estointernet.in/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz
#             - tar xzvf apache-maven-3.6.1-bin.tar.gz
#             - export PATH=$PATH:/tmp/apache-maven-3.6.1/bin
#             - export M2_HOME=/tmp/apache-maven-3.6.1/
#             - popd
          ########## java installation done
            - javac -version
            - mvn --version
#           onSuccess:
#             - send_notification_slack
            
      - name: mvnBuild_publishs
        type: PublishBuildInfo
        configuration:
#           nodePool: ubuntu16
#           integrations:
#             - name:_slack
          inputSteps:
            - name: mvnBuild_sample
          outputResources:
            - name: mvnBuild_infoo
          runtime:            
            type: image
            image:
              auto:
                 language: java
                 versions: 
                   - 13
#               custom:
#                 name: drydock/u16java
#                 tag: master   
#         execution:
#           onSuccess:
#             - send_notification_slack
      
#       - name: mvn_build_scan
#         type: XrayScan
#         configuration:
#           nodePool: ubuntu16
#           #waitUntilFinish: false
#           inputResources:
#             - name: mvnBuild_infoo  
#           outputResources:
#             - name: mvnBuild_infoScaneds
                
      - name: mvn_build_promote
        type: PromoteBuild
        configuration:
#           nodePool: ubuntu16
          targetRepository: test-generic-local # required 
          includeDependencies: true    # default false
          status: "promote success" # for mvn_build_promoted" # optional
          comment: "maven build should be promoted from-local. maven build should be promoted from-local. maven build should be promoted from-local. maven build should be promoted from-local" # for mvn_build_promoted" # optional
          copy: true #optional - no need to have delete access it wont delete from base repo just moves copy to target repo
          inputResources:
            - name: mvnBuild_infoo #required
          outputResources:
            - name: mvnBuild_infopromoted01 #required
          runtime:            
            type: image
            image:
              auto:
                language: java
                versions: 
                  - 13
#               custom:
#                 name: drydock/u16java
#                 tag: master
#       - name: mvn_release_bundle_unsigned
#         type: CreateReleaseBundle
#         configuration:
# #           nodePool: ubuntu16
#           dryRun: false 
#           description: "This is to test mvn build"
#           releaseBundleName: mvn_release_bundle
#           releaseBundleVersion: v1.1.1
#           sign: false
#           inputResources:
#             - name: mvnBuild_infopromoted01
#           outputResources:
#             - name: unsigned_mvn_release_bundles
#       - name: signed_release_mvn_bundle
#         type: SignReleaseBundle
#         configuration:
# #           nodePool: ubuntu16
#           inputResources:
#             - name: unsigned_mvn_release_bundles
#           outputResources:
#             - name: signed_mvn_release_bundles
#       - name: mvn_distribute_signed_release
#         type: DistributeReleaseBundle
#         configuration:
# #           nodePool: ubuntu16
#           inputResources:
#             - name: signed_mvn_release_bundles
#             - name: mvn_distribution_rules